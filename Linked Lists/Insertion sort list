/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 * 
 * typedef struct ListNode listnode;
 * 
 * listnode* listnode_new(int val) {
 *     listnode* node = (listnode *) malloc(sizeof(listnode));
 *     node->val = val;
 *     node->next = NULL;
 *     return node;
 * }
 */
/**
 * @input A : Head pointer of linked list 
 * 
 * @Output head pointer of list.
 */
 
 
void insertitem(listnode** head,listnode* item){
    
    listnode* temp = *head;
    if(temp==NULL || temp->val>item->val){
        item->next = *head;
        *head = item;
    }
    else{
        while(temp->next!=NULL && temp->next->val>item->val){
           temp = temp->next;
        }
         item->next = temp->next;
            temp->next = item;
    }
    
} 
listnode* insertionSortList(listnode* head) {
    
    listnode* sorted = NULL;
    listnode* ptr = head;
    while(ptr!=NULL){
        listnode* temp = ptr; 
        insertitem(&sorted,ptr);
        ptr = temp->next;
    }
    return sorted;
}
